{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport { Component } from 'react';\nimport QueryString from 'query-string';\n\nvar LinkedInPopUp = function (_Component) {\n  _inherits(LinkedInPopUp, _Component);\n\n  function LinkedInPopUp() {\n    _classCallCheck(this, LinkedInPopUp);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  LinkedInPopUp.prototype.componentDidMount = function componentDidMount() {\n    var params = QueryString.parse(window.location.search);\n\n    if (params.error) {\n      var errorMessage = params.error_description || 'Login failed. Please try again.';\n      window.opener && window.opener.postMessage({\n        error: params.error,\n        state: params.state,\n        errorMessage: errorMessage,\n        from: 'Linked In'\n      }, window.location.origin); // Close tab if user cancelled login\n\n      if (params.error === 'user_cancelled_login') {\n        window.close();\n      }\n    }\n\n    if (params.code) {\n      window.opener && window.opener.postMessage({\n        code: params.code,\n        state: params.state,\n        from: 'Linked In'\n      }, window.location.origin);\n    }\n\n    if (params.linkedin_redirect_url) {\n      window.location.href = params.linkedin_redirect_url;\n    }\n  };\n\n  LinkedInPopUp.prototype.render = function render() {\n    return null;\n  };\n\n  return LinkedInPopUp;\n}(Component);\n\nexport default LinkedInPopUp;","map":null,"metadata":{},"sourceType":"module"}