{"ast":null,"code":"var _jsxFileName = \"/Users/ajeetjai/Desktop/website/src/view/components/Auth/ResetPassword.js\";\nimport React, { Component } from 'react';\nimport Logo from \"../../layout/defaultLayout/headerWrapper/header/Logo\";\nimport Button from \"../common/Buttons/Button\";\nimport { Cancel, EyeIcon } from \"../../../assets/SvgIcon\";\nimport { resetPasswordUser } from \"../../../services/usersService\";\nimport { KoolAlert } from \"../common/KoolAlert\";\nimport { Loader } from \"../../../assets/SvgIcon\";\nimport RouterConstants from '../../../constants/routerConstants';\nimport { constants } from \"../../../constants/constant\";\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let errors = this.state.errors;\n\n      if (e.target.value) {\n        errors[e.target.name] = '';\n      }\n\n      this.setState({\n        [e.target.name]: e.target.value,\n        errors: errors,\n        responseError: ''\n      });\n    };\n\n    this.handleValidation = () => {\n      let errors = [];\n      let formIsValid = true;\n      let _this$state = this.state,\n          newPassword = _this$state.newPassword,\n          confirmPassword = _this$state.confirmPassword;\n\n      if (!newPassword) {\n        formIsValid = false;\n        errors[\"newPassword\"] = constants.Errors.BlankNewPasswordError;\n      }\n\n      if (newPassword) {\n        //var pattern = ;\n        if (!newPassword.match(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!@#$%^&*]{6,}$/)) {\n          formIsValid = false;\n          errors[\"newPassword\"] = constants.Errors.PasswordFormatError;\n        }\n      }\n\n      if (!confirmPassword) {\n        formIsValid = false;\n        errors[\"confirmPassword\"] = constants.Errors.BlankConfirmPasswordError;\n      }\n\n      if (newPassword && confirmPassword) {\n        if (newPassword !== confirmPassword) {\n          formIsValid = false;\n          errors[\"confirmPassword\"] = constants.Errors.PasswordMatchError;\n        }\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    };\n\n    this.handleFormSubmit = e => {\n      e.preventDefault();\n      let self = this;\n      let _this$state2 = this.state,\n          newPassword = _this$state2.newPassword,\n          confirmPassword = _this$state2.confirmPassword;\n\n      if (this.handleValidation()) {\n        let token = this.props.match.params.id;\n        let obj = {\n          'password': newPassword,\n          'confirmPassword': confirmPassword\n        };\n        this.setState({\n          loader: true\n        });\n        resetPasswordUser(obj, token).then(res => {\n          if (res.data.statusCode == 1) {\n            self.setState({\n              loaderOpen: false,\n              alertVisible: true,\n              alertType: 1,\n              loader: false,\n              confirmPassword: \"\",\n              newPassword: \"\",\n              responseError: constants.SUCCESS_MESG.PasswordChangeMesg\n            }); //this.props.history.push('/success');\n          } else {\n            self.setState({\n              loaderOpen: false,\n              alertVisible: true,\n              alertType: 2,\n              loader: false,\n              responseError: res.data.error.errorMessage\n            });\n          }\n        }).catch(e => {\n          this.setState({\n            loaderOpen: false,\n            alertVisible: true,\n            alertType: 2,\n            loader: false,\n            responseError: constants.Errors.DefaultError\n          });\n        });\n      }\n    };\n\n    this.handleConfirmShowPassword = () => this.setState({\n      showConfirmPassword: !this.state.showConfirmPassword\n    });\n\n    this.redirectBack = () => {\n      this.props.history.push(RouterConstants.login);\n    };\n\n    this.state = {\n      errors: [],\n      showConfirmPassword: false,\n      responseError: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n      loader: false\n    };\n  }\n\n  render() {\n    let _this$state3 = this.state,\n        showConfirmPassword = _this$state3.showConfirmPassword,\n        newPassword = _this$state3.newPassword,\n        confirmPassword = _this$state3.confirmPassword,\n        errors = _this$state3.errors,\n        alertType = _this$state3.alertType,\n        alertVisible = _this$state3.alertVisible,\n        responseError = _this$state3.responseError,\n        loader = _this$state3.loader;\n    return React.createElement(\"div\", {\n      className: \"auth-container without-banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      classLogo: \"desktop-logo d-flex align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), loader ? React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"auth-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"auth-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"auth-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Reset Password\"), React.createElement(\"label\", {\n      className: \"mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"We\\u2019ll help you reset it back\"), React.createElement(KoolAlert, {\n      alertVisible: alertVisible,\n      alertType: alertType,\n      label: responseError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"auth-body mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group text-left \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"pwd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"New Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      type: 'password',\n      placeholder: \"New Password\",\n      name: \"newPassword\",\n      value: newPassword,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"custom-alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, errors[\"newPassword\"])), React.createElement(\"div\", {\n      className: \"form-group text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"pwd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      type: \"\".concat(showConfirmPassword ? 'text' : 'password'),\n      placeholder: \"Confirm Password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      onClick: this.handleConfirmShowPassword,\n      className: \"cm_eyeIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, showConfirmPassword ? React.createElement(Cancel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }) : React.createElement(EyeIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"custom-alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, errors[\"confirmPassword\"]), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"auth-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Button, {\n      btnClass: \"btn-primary-fill btn\",\n      btnText: \"RESET PASSWORD\",\n      btnType: 'Submit',\n      onClick: this.handleEmailSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"back-wrapper text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Button, {\n      btnClass: \"btn btn-transparent cursor-pointer expand d-inline-block\",\n      btnText: \"Cancel\",\n      btnClickEvent: this.redirectBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/ajeetjai/Desktop/website/src/view/components/Auth/ResetPassword.js"],"names":["React","Component","Logo","Button","Cancel","EyeIcon","resetPasswordUser","KoolAlert","Loader","RouterConstants","constants","ResetPassword","constructor","props","handleChange","e","errors","state","target","value","name","setState","responseError","handleValidation","formIsValid","newPassword","confirmPassword","Errors","BlankNewPasswordError","match","PasswordFormatError","BlankConfirmPasswordError","PasswordMatchError","handleFormSubmit","preventDefault","self","token","params","id","obj","loader","then","res","data","statusCode","loaderOpen","alertVisible","alertType","SUCCESS_MESG","PasswordChangeMesg","error","errorMessage","catch","DefaultError","handleConfirmShowPassword","showConfirmPassword","redirectBack","history","push","login","render","handleEmailSubmit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Logo from \"../../layout/defaultLayout/headerWrapper/header/Logo\";\nimport Button from \"../common/Buttons/Button\";\nimport {Cancel, EyeIcon} from \"../../../assets/SvgIcon\";\nimport {resetPasswordUser} from \"../../../services/usersService\";\nimport {KoolAlert} from \"../common/KoolAlert\";\nimport {Loader} from \"../../../assets/SvgIcon\";\nimport RouterConstants from '../../../constants/routerConstants';\nimport {constants} from \"../../../constants/constant\";\n\nclass ResetPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errors: [],\n            showConfirmPassword: false,\n            responseError: \"\",\n            newPassword: \"\",\n            confirmPassword: \"\",\n            loader: false,\n        }\n    }\n\n    handleChange = e => {\n        let errors = this.state.errors;\n        if (e.target.value) {\n            errors[e.target.name] = ''\n        }\n        this.setState({\n            [e.target.name]: e.target.value,\n            errors: errors,\n            responseError: '',\n        })\n    }\n    handleValidation = () => {\n        let errors = [];\n        let formIsValid = true;\n        let {newPassword, confirmPassword} = this.state;\n\n        if (!newPassword) {\n            formIsValid = false;\n            errors[\"newPassword\"] = constants.Errors.BlankNewPasswordError;\n        }\n        if (newPassword) {\n            //var pattern = ;\n            if (!newPassword.match(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!@#$%^&*]{6,}$/)) {\n                formIsValid = false;\n                errors[\"newPassword\"] = constants.Errors.PasswordFormatError;\n            }\n        }\n        if (!confirmPassword) {\n            formIsValid = false;\n            errors[\"confirmPassword\"] = constants.Errors.BlankConfirmPasswordError;\n        }\n        if (newPassword && confirmPassword) {\n            if (newPassword !== confirmPassword) {\n                formIsValid = false;\n                errors[\"confirmPassword\"] = constants.Errors.PasswordMatchError;\n            }\n        }\n        this.setState({errors: errors});\n        return formIsValid;\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        let self = this;\n        let {newPassword, confirmPassword} = this.state;\n\n        if (this.handleValidation()) {\n            let token = this.props.match.params.id;\n\n            let obj = {\n                'password': newPassword,\n                'confirmPassword': confirmPassword\n            }\n            this.setState({loader: true});\n            resetPasswordUser(obj, token)\n                .then(res => {\n                    if (res.data.statusCode == 1) {\n                        self.setState({\n                            loaderOpen: false,\n                            alertVisible: true,\n                            alertType: 1,\n                            loader: false,\n                            confirmPassword: \"\",\n                            newPassword: \"\",\n                            responseError:constants.SUCCESS_MESG.PasswordChangeMesg,\n                        })\n\n                        //this.props.history.push('/success');\n                    } else {\n                        self.setState({\n                            loaderOpen: false,\n                            alertVisible: true,\n                            alertType: 2,\n                            loader: false,\n                            responseError: res.data.error.errorMessage\n                        })\n                    }\n                }).catch(e => {\n                this.setState({\n                    loaderOpen: false,\n                    alertVisible: true,\n                    alertType: 2,\n                    loader: false,\n                    responseError: constants.Errors.DefaultError\n                })\n            })\n        }\n    }\n\n    handleConfirmShowPassword = () => this.setState({showConfirmPassword: !this.state.showConfirmPassword})\n\n    redirectBack = () => {\n        this.props.history.push(RouterConstants.login);\n    }\n\n    render() {\n        let {showConfirmPassword, newPassword, confirmPassword, errors, alertType, alertVisible, responseError, loader} = this.state;\n        return (\n            <div className=\"auth-container without-banner\">\n                <Logo classLogo=\"desktop-logo d-flex align-items-center\"/>\n                {loader ? <Loader/> : null}\n                <div className=\"auth-wrapper\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-md-12\">\n                            <div className=\"auth-form-body\">\n                                <div className=\"auth-header\">\n                                    <h2>Reset Password</h2>\n                                    <label className=\"mt-2\">We’ll help you reset it back</label>\n                                    <KoolAlert\n                                        alertVisible={alertVisible}\n                                        alertType={alertType}\n                                        label={responseError}\n                                    />\n                                </div>\n\n                                <div className=\"auth-body mt-3\">\n                                    <form onSubmit={this.handleFormSubmit}>\n                                        <div className=\"form-group text-left \">\n                                            <label htmlFor=\"pwd\">New Password</label>\n                                            <input\n                                                type=\"password\"\n                                                className=\"form-control\"\n                                                type={'password'}\n                                                placeholder=\"New Password\"\n                                                name=\"newPassword\"\n                                                value={newPassword}\n                                                onChange={this.handleChange}\n                                            />\n                                            <span className=\"custom-alert\">{errors[\"newPassword\"]}</span>\n                                        </div>\n                                        <div className=\"form-group text-left\">\n                                            <label htmlFor=\"pwd\">Confirm Password</label>\n                                            <input\n                                                type=\"password\"\n                                                className=\"form-control\"\n                                                type={`${showConfirmPassword ? 'text' : 'password'}`}\n                                                placeholder=\"Confirm Password\"\n                                                name=\"confirmPassword\"\n                                                value={confirmPassword}\n                                                onChange={this.handleChange}\n                                            />\n                                            <span onClick={this.handleConfirmShowPassword} className=\"cm_eyeIcon\">\n                                                {showConfirmPassword ?\n                                                    <Cancel/> : <EyeIcon/>}\n                                            </span>\n                                            <span className=\"custom-alert\">{errors[\"confirmPassword\"]}</span>\n                                            <br/>\n                                            {/* <span className=\"custom-alert\">{responseError}</span> */}\n                                        </div>\n                                        <div className=\"auth-footer\">\n                                            <Button btnClass=\"btn-primary-fill btn\"\n                                                    btnText={\"RESET PASSWORD\"}\n                                                    btnType={'Submit'}\n                                                    onClick={this.handleEmailSubmit}/>\n                                        </div>\n                                        <div className=\"back-wrapper text-center\">\n                                            <Button\n                                                btnClass=\"btn btn-transparent cursor-pointer expand d-inline-block\"\n                                                btnText=\"Cancel\"\n                                                btnClickEvent={this.redirectBack}\n                                            />\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}