{"ast":null,"code":"var _jsxFileName = \"/Users/ajeetjai/Desktop/website/src/view/components/common/Filters/Filter.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { getOr } from 'lodash/fp';\nimport { CrossIcon } from '../../../../assets/images';\nimport DropArrow from \"../../../../assets/images/company/drop-arrow.svg\";\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      industryMore: false,\n      locationMore: false,\n      industryOpen: true,\n      locationOpen: true,\n      industryMoreOpen: false,\n      locationMoreOpen: false,\n      industryList: [],\n      locationList: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  componentDidMount() {\n    const categoryHeadText = this.props.categoryHeadText;\n    const industryList = getOr([], 'industry', categoryHeadText);\n    const locationList = getOr([], 'location', categoryHeadText);\n    let industryMore = false,\n        locationMore = false;\n\n    if (industryList.length > 6) {\n      industryMore = true;\n    }\n\n    if (locationList.length > 6) {\n      locationMore = true;\n    }\n\n    this.setState({\n      industryList,\n      locationList,\n      industryMore,\n      locationMore\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const _nextProps$categoryHe = nextProps.categoryHeadText,\n          industry = _nextProps$categoryHe.industry,\n          location = _nextProps$categoryHe.location;\n    return {\n      industryList: industry,\n      locationList: location\n    };\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.checked;\n    const id = target.id;\n    const name = target.name;\n    let currentState = {\n      \"name\": id,\n      \"isChecked\": value,\n      \"category\": name\n    };\n    this.props.onFilterChange(currentState);\n  }\n\n  handleReset() {\n    this.props.onResetClick();\n  }\n\n  toggleIndustryMore() {\n    this.setState({\n      industryMoreOpen: !this.state.industryMoreOpen\n    });\n  }\n\n  toggleLocationMore() {\n    this.setState({\n      locationMoreOpen: !this.state.locationMoreOpen\n    });\n  }\n\n  toggleIndustryView() {\n    this.setState({\n      industryOpen: !this.state.industryOpen\n    });\n  }\n\n  toggleLocationView() {\n    this.setState({\n      locationOpen: !this.state.locationOpen\n    });\n  }\n\n  renderIndustryList() {\n    let _this$state = this.state,\n        industryMoreOpen = _this$state.industryMoreOpen,\n        industryList = _this$state.industryList,\n        industryMore = _this$state.industryMore,\n        industryOpen = _this$state.industryOpen;\n    let listData = [];\n\n    if (industryMoreOpen) {\n      listData = industryList;\n    } else {\n      listData = industryList.slice(0, 6);\n    }\n\n    let filterList = this.getFilterList(listData, 'industry');\n    return React.createElement(\"div\", {\n      className: \"category-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"d-flex align-items-center justify-content-between  w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Industry\"), React.createElement(\"span\", {\n      onClick: () => this.toggleIndustryView(),\n      className: classNames(\"cursor-pointer drop-arrow\", {\n        'rotate': !industryOpen\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: DropArrow,\n      alt: \"drop-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })))), industryOpen ? React.createElement(\"ul\", {\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, filterList, industryMore ? !industryMoreOpen ? React.createElement(\"li\", {\n      className: \"cursor-pointer more-less\",\n      onClick: () => this.toggleIndustryMore(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"+\", industryList.length - listData.length, \" more\") : React.createElement(\"li\", {\n      className: \"cursor-pointer more-less\",\n      onClick: () => this.toggleIndustryMore(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \" show less\") : null) : null);\n  }\n\n  renderLocationList() {\n    let _this$state2 = this.state,\n        locationMoreOpen = _this$state2.locationMoreOpen,\n        locationList = _this$state2.locationList,\n        locationMore = _this$state2.locationMore,\n        locationOpen = _this$state2.locationOpen;\n    let listData = [];\n\n    if (locationMoreOpen) {\n      listData = locationList;\n    } else {\n      listData = locationList.slice(0, 6);\n    }\n\n    let filterList = this.getFilterList(listData, 'location');\n    return React.createElement(\"div\", {\n      className: \"category-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"d-flex align-items-center justify-content-between w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Location\"), React.createElement(\"span\", {\n      onClick: () => this.toggleLocationView(),\n      className: classNames(\"cursor-pointer drop-arrow\", {\n        'rotate': !locationOpen\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: DropArrow,\n      alt: \"dorp-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), locationOpen ? React.createElement(\"ul\", {\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, filterList, locationMore ? !locationMoreOpen ? React.createElement(\"li\", {\n      className: \"cursor-pointer more-less\",\n      onClick: () => this.toggleLocationMore(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"+\", locationList.length - listData.length, \" more\") : React.createElement(\"li\", {\n      className: \"cursor-pointer more-less\",\n      onClick: () => this.toggleLocationMore(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \" show less\") : null) : null);\n  }\n\n  getFilterList(data, key) {\n    return data.map((element, index) => {\n      return React.createElement(\"li\", {\n        className: \"d-flex align-items-center\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"custom-control custom-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        checked: element.isChecked,\n        name: key,\n        type: \"checkbox\",\n        className: \"custom-control-input\",\n        id: element.name,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: element.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classNames({\n          'font-weight-bold': element.isChecked\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, element.name))));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.filterClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filter-header d-flex align-items-center justify-content-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.props.headerText, \" \"), React.createElement(\"p\", {\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, this.props.resetText), React.createElement(\"div\", {\n      className: classNames(\"cross-icon\"),\n      onClick: this.props.filterToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: CrossIcon,\n      className: \"icons\",\n      alt: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }))), this.renderIndustryList(), this.renderLocationList());\n  }\n\n}\n\nexport default Filter;","map":{"version":3,"sources":["/Users/ajeetjai/Desktop/website/src/view/components/common/Filters/Filter.js"],"names":["React","Component","classNames","getOr","CrossIcon","Filter","constructor","props","state","industryMore","locationMore","industryOpen","locationOpen","industryMoreOpen","locationMoreOpen","industryList","locationList","handleInputChange","bind","handleReset","componentDidMount","categoryHeadText","length","setState","getDerivedStateFromProps","nextProps","prevState","industry","location","e","target","value","checked","id","name","currentState","onFilterChange","onResetClick","toggleIndustryMore","toggleLocationMore","toggleIndustryView","toggleLocationView","renderIndustryList","listData","slice","filterList","getFilterList","DropArrow","renderLocationList","data","key","map","element","index","isChecked","render","filterClass","headerText","resetText","filterToggle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { getOr } from 'lodash/fp';\nimport { CrossIcon } from '../../../../assets/images';\nimport DropArrow from \"../../../../assets/images/company/drop-arrow.svg\";\n\n\nclass Filter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            industryMore: false,\n            locationMore: false,\n            industryOpen: true,\n            locationOpen: true,\n            industryMoreOpen: false,\n            locationMoreOpen: false,\n            industryList: [],\n            locationList: [],\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    componentDidMount() {\n        const { categoryHeadText } = this.props;\n        const industryList = getOr([], 'industry', categoryHeadText);\n        const locationList = getOr([], 'location', categoryHeadText);\n        let industryMore = false, locationMore = false;\n        if (industryList.length > 6) {\n            industryMore = true;\n        }\n        if (locationList.length > 6) {\n            locationMore = true;\n        }\n        this.setState({\n            industryList,\n            locationList,\n            industryMore,\n            locationMore\n        })\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const { categoryHeadText: {\n            industry,\n            location\n        } } = nextProps\n        return {\n            industryList: industry,\n            locationList: location\n        }\n    }\n\n    handleInputChange(e) {\n        const target = e.target;\n        const value = target.checked;\n        const id = target.id;\n        const name = target.name;\n        let currentState = {\n            \"name\": id,\n            \"isChecked\": value,\n            \"category\": name\n        };\n        this.props.onFilterChange(currentState);\n    }\n\n    handleReset() {\n        this.props.onResetClick();\n    }\n\n    toggleIndustryMore() {\n        this.setState({ industryMoreOpen: !this.state.industryMoreOpen })\n    }\n\n    toggleLocationMore() {\n        this.setState({ locationMoreOpen: !this.state.locationMoreOpen })\n    }\n\n    toggleIndustryView() {\n        this.setState({ industryOpen: !this.state.industryOpen })\n    }\n\n    toggleLocationView() {\n        this.setState({ locationOpen: !this.state.locationOpen })\n    }\n\n    renderIndustryList() {\n        let { industryMoreOpen, industryList, industryMore, industryOpen } = this.state;\n        let listData = []\n        if (industryMoreOpen) {\n            listData = industryList\n        } else {\n            listData = industryList.slice(0, 6);\n        }\n        let filterList = this.getFilterList(listData, 'industry')\n        return (<div className=\"category-wrapper\">\n            <div className=\"d-flex justify-content-between\">\n                <h3 className=\"d-flex align-items-center justify-content-between  w-100\">\n                    <span>Industry</span>\n                    <span\n                        onClick={() => this.toggleIndustryView()}\n                        className={classNames(\"cursor-pointer drop-arrow\", { 'rotate': !industryOpen })}\n                    >\n                        <img src={DropArrow} alt=\"drop-arrow\" />\n                    </span>\n                </h3>\n                {/* <img src={DropArrow} style={{color:'black'}}/>*/}\n            </div>\n            {industryOpen ?\n                <ul className=\"list-unstyled\">\n                    {filterList}\n                    {\n                        industryMore ?\n                            (\n                                !industryMoreOpen ?\n                                    <li className=\"cursor-pointer more-less\" onClick={() => this.toggleIndustryMore()}>+{industryList.length - listData.length} more</li>\n                                    :\n                                    <li className=\"cursor-pointer more-less\" onClick={() => this.toggleIndustryMore()}> show less</li>\n                            )\n                            :\n                            null\n                    }\n                </ul>\n                : null\n            }\n\n        </div>)\n    }\n\n    renderLocationList() {\n        let { locationMoreOpen, locationList, locationMore, locationOpen } = this.state;\n        let listData = []\n        if (locationMoreOpen) {\n            listData = locationList\n        } else {\n            listData = locationList.slice(0, 6);\n        }\n        let filterList = this.getFilterList(listData, 'location')\n        return (<div className=\"category-wrapper\">\n            <h3 className=\"d-flex align-items-center justify-content-between w-100\">\n                <span>Location</span>\n                <span\n                    onClick={() => this.toggleLocationView()}\n                    className={classNames(\"cursor-pointer drop-arrow\", { 'rotate': !locationOpen })}\n                >\n                    <img src={DropArrow} alt=\"dorp-arrow\" />\n                </span>\n            </h3>\n            {\n                locationOpen ?\n                    <ul className=\"list-unstyled\">\n                        {filterList}\n                        {\n                            locationMore ?\n                                (\n                                    !locationMoreOpen ?\n                                        <li className=\"cursor-pointer more-less\" onClick={() => this.toggleLocationMore()}>+{locationList.length - listData.length} more</li>\n                                        :\n                                        <li className=\"cursor-pointer more-less\" onClick={() => this.toggleLocationMore()}> show less</li>\n                                )\n                                :\n                                null\n                        }\n                    </ul>\n                    :\n                    null\n            }\n\n        </div>)\n    }\n\n    getFilterList(data, key) {\n        return data.map((element, index) => {\n            return (\n                <li className=\"d-flex align-items-center\" key={index}>\n                    <div className=\"custom-control custom-checkbox\">\n                        <input\n                            checked={element.isChecked}\n                            name={key}\n                            type=\"checkbox\"\n                            className=\"custom-control-input\"\n                            id={element.name}\n                            onChange={this.handleInputChange} />\n                        <label className=\"custom-control-label\" htmlFor={element.name}>\n                            <span className={classNames({ 'font-weight-bold': element.isChecked })}>{element.name}</span>\n                        </label>\n                    </div>\n                </li>\n            )\n        });\n    }\n\n    render() {\n        return (\n            <div className={this.props.filterClass}>\n                <div className=\"filter-header d-flex align-items-center justify-content-between\">\n                    <h2>{this.props.headerText} </h2>\n                    <p onClick={this.handleReset}>{this.props.resetText}</p>\n                    <div className={classNames(\"cross-icon\")} onClick={this.props.filterToggle}>\n                        <img src={CrossIcon} className=\"icons\" alt=\"home\" />\n                    </div>\n                </div>\n                {this.renderIndustryList()}\n                {this.renderLocationList()}\n            </div>\n        )\n    }\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}