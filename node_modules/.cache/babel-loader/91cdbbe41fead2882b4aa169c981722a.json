{"ast":null,"code":"import axios from 'axios';\nimport API from '../config/Api';\nexport const FECTH_POWER_READS_BEGIN = 'FECTH_POWER_READS_BEGIN';\nexport const FECTH_POWER_READS_SUCCESS = 'FECTH_POWER_READS_SUCCESS';\nexport const FECTH_POWER_READS_FAILURE = 'FECTH_POWER_READS_FAILURE';\nexport const fetchPowerReadBegin = () => ({\n  type: FECTH_POWER_READS_BEGIN\n});\nexport const fetchPowerReadSuccess = powerReads => ({\n  type: FECTH_POWER_READS_SUCCESS,\n  payload: {\n    powerReads\n  }\n});\nexport const fetchPowerReadFailure = error => ({\n  type: FECTH_POWER_READS_FAILURE,\n  payload: {\n    error\n  }\n});\nexport function fetchPowerReads() {\n  return dispatch => {\n    dispatch(fetchPowerReadBegin());\n    axios.get(\"\".concat(API.POWER_READS)).then(response => {\n      dispatch(fetchPowerReadSuccess(response.data));\n    }).catch(error => {\n      dispatch(fetchPowerReadFailure(error));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/ajeetjai/Desktop/website/src/actions/ArticlesAction.js"],"names":["axios","API","FECTH_POWER_READS_BEGIN","FECTH_POWER_READS_SUCCESS","FECTH_POWER_READS_FAILURE","fetchPowerReadBegin","type","fetchPowerReadSuccess","powerReads","payload","fetchPowerReadFailure","error","fetchPowerReads","dispatch","get","POWER_READS","then","response","data","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAO,MAAMC,uBAAuB,GAAK,yBAAlC;AACP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AAGP,OAAO,MAAMC,mBAAmB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEJ;AADmC,CAAP,CAA5B;AAIP,OAAO,MAAMK,qBAAqB,GAAGC,UAAU,KAAK;AACnDF,EAAAA,IAAI,EAAEH,yBAD6C;AAEnDM,EAAAA,OAAO,EAAE;AACRD,IAAAA;AADQ;AAF0C,CAAL,CAAxC;AAOP,OAAO,MAAME,qBAAqB,GAAGC,KAAK,KAAK;AAC9CL,EAAAA,IAAI,EAAEF,yBADwC;AAE9CK,EAAAA,OAAO,EAAE;AACRE,IAAAA;AADQ;AAFqC,CAAL,CAAnC;AAOP,OAAO,SAASC,eAAT,GAA2B;AACjC,SAAOC,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAACR,mBAAmB,EAApB,CAAR;AACAL,IAAAA,KAAK,CAACc,GAAN,WAAab,GAAG,CAACc,WAAjB,GACEC,IADF,CACQC,QAAD,IAAc;AACnBJ,MAAAA,QAAQ,CAACN,qBAAqB,CAACU,QAAQ,CAACC,IAAV,CAAtB,CAAR;AACA,KAHF,EAGIC,KAHJ,CAGWR,KAAD,IAAW;AACnBE,MAAAA,QAAQ,CAACH,qBAAqB,CAACC,KAAD,CAAtB,CAAR;AACA,KALF;AAMA,GARD;AASA","sourcesContent":["import axios from 'axios';\nimport API from '../config/Api';\nexport const FECTH_POWER_READS_BEGIN =   'FECTH_POWER_READS_BEGIN';\nexport const FECTH_POWER_READS_SUCCESS = 'FECTH_POWER_READS_SUCCESS';\nexport const FECTH_POWER_READS_FAILURE = 'FECTH_POWER_READS_FAILURE';\n\n\nexport const fetchPowerReadBegin = () => ({\n\ttype: FECTH_POWER_READS_BEGIN,\n});\n\nexport const fetchPowerReadSuccess = powerReads => ({\n\ttype: FECTH_POWER_READS_SUCCESS,\n\tpayload: {\n\t\tpowerReads,\n\t},\n});\n\nexport const fetchPowerReadFailure = error => ({\n\ttype: FECTH_POWER_READS_FAILURE,\n\tpayload: {\n\t\terror,\n\t},\n});\n\nexport function fetchPowerReads() {\n\treturn dispatch => {\n\t\tdispatch(fetchPowerReadBegin());\n\t\taxios.get(`${API.POWER_READS}`)\n\t\t\t.then((response) => {\n\t\t\t\tdispatch(fetchPowerReadSuccess(response.data));\n\t\t\t}).catch((error) => {\n\t\t\t\tdispatch(fetchPowerReadFailure(error));\n\t\t\t});\n\t};\n}"]},"metadata":{},"sourceType":"module"}