{"ast":null,"code":"var _jsxFileName = \"/Users/ajeetjai/Desktop/website/src/view/components/social/GoogleLogin.js\";\nimport React, { Component } from \"react\";\nimport { GoogleLogin } from 'react-google-login';\nimport config from './config';\nimport { connect } from \"react-redux\";\nimport { SocialAction } from \"../../../actions/UserActions\";\nimport { GoogleIcon } from \"../../../assets/images\";\nimport { getOr } from 'lodash/fp';\nimport RouterConstants from '../../../constants/routerConstants';\n\nclass GLogin extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.responseGoogle = response => {\n      this.setState({\n        isLoading: true\n      });\n      let obj = {\n        email: getOr(null, 'w3.U3', response),\n        lastName: getOr(null, 'w3.wea', response),\n        firstName: getOr(null, 'w3.ofa', response),\n        password: \"\",\n        type: \"google\",\n        socialId: getOr(null, 'w3.Eea', response),\n        deviceId: (Math.floor(900000 * Math.random()) + 100000).toString(),\n        deviceToken: (Math.floor(900000 * Math.random()) + 100000).toString(),\n        platForm: \"web\",\n        gender: \"female\",\n        avtar: getOr(null, 'profileObj.imageUrl', response)\n      }; // Marks :- social-login  action \n\n      this.props.SocialAction(obj).then(response => {\n        if (response === \"Success\") {\n          this.props.history.push(RouterConstants.home);\n        } else {\n          this.setState({\n            isLoading: false\n          });\n        }\n      }).catch(e => {// console.log(e)\n      });\n    };\n  }\n\n  //Marks:- rendering ui element\n  render() {\n    let googleContent;\n    googleContent = React.createElement(GoogleLogin, {\n      clientId: config.google,\n      render: renderProps => React.createElement(\"button\", {\n        className: \"btn-google btn d-flex align-items-center justify-content-center\",\n        onClick: renderProps.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"pr-sm-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: GoogleIcon,\n        alt: GoogleIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"d-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"GOOGLE\")),\n      onSuccess: this.responseGoogle,\n      onFailure: this.responseGoogle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, googleContent);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {\n  SocialAction\n})(GLogin);","map":{"version":3,"sources":["/Users/ajeetjai/Desktop/website/src/view/components/social/GoogleLogin.js"],"names":["React","Component","GoogleLogin","config","connect","SocialAction","GoogleIcon","getOr","RouterConstants","GLogin","responseGoogle","response","setState","isLoading","obj","email","lastName","firstName","password","type","socialId","deviceId","Math","floor","random","toString","deviceToken","platForm","gender","avtar","props","then","history","push","home","catch","e","render","googleContent","google","renderProps","onClick","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;AAEA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAI3BS,cAJ2B,GAITC,QAAD,IAAc;AAC3B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,UAAIC,GAAG,GAAG;AACNC,QAAAA,KAAK,EAAER,KAAK,CAAC,IAAD,EAAO,OAAP,EAAgBI,QAAhB,CADN;AAENK,QAAAA,QAAQ,EAAET,KAAK,CAAC,IAAD,EAAO,QAAP,EAAiBI,QAAjB,CAFT;AAGNM,QAAAA,SAAS,EAAEV,KAAK,CAAC,IAAD,EAAO,QAAP,EAAiBI,QAAjB,CAHV;AAINO,QAAAA,QAAQ,EAAE,EAJJ;AAKNC,QAAAA,IAAI,EAAE,QALA;AAMNC,QAAAA,QAAQ,EAAEb,KAAK,CAAC,IAAD,EAAO,QAAP,EAAiBI,QAAjB,CANT;AAONU,QAAAA,QAAQ,EAAE,CAACC,IAAI,CAACC,KAAL,CAAW,SAASD,IAAI,CAACE,MAAL,EAApB,IAAqC,MAAtC,EAA8CC,QAA9C,EAPJ;AAQNC,QAAAA,WAAW,EAAE,CAACJ,IAAI,CAACC,KAAL,CAAW,SAASD,IAAI,CAACE,MAAL,EAApB,IAAqC,MAAtC,EAA8CC,QAA9C,EARP;AASNE,QAAAA,QAAQ,EAAE,KATJ;AAUNC,QAAAA,MAAM,EAAE,QAVF;AAWNC,QAAAA,KAAK,EAAEtB,KAAK,CAAC,IAAD,EAAO,qBAAP,EAA8BI,QAA9B;AAXN,OAAV,CAF2B,CAe3B;;AAEA,WAAKmB,KAAL,CAAWzB,YAAX,CAAwBS,GAAxB,EACKiB,IADL,CACUpB,QAAQ,IAAI;AACd,YAAIA,QAAQ,KAAK,SAAjB,EAA4B;AACxB,eAAKmB,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwBzB,eAAe,CAAC0B,IAAxC;AACH,SAFD,MAEO;AACH,eAAKtB,QAAL,CAAc;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAd;AACH;AACJ,OAPL,EAOOsB,KAPP,CAOaC,CAAC,IAAI,CACV;AACH,OATL;AAWH,KAhC0B;AAAA;;AAkC3B;AAEAC,EAAAA,MAAM,GAAG;AACL,QAAIC,aAAJ;AACAA,IAAAA,aAAa,GACT,oBAAC,WAAD;AACI,MAAA,QAAQ,EAAEnC,MAAM,CAACoC,MADrB;AAEI,MAAA,MAAM,EAAEC,WAAW,IACf;AAAQ,QAAA,SAAS,EAAC,iEAAlB;AAAoF,QAAA,OAAO,EAAEA,WAAW,CAACC,OAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B;AAAK,QAAA,GAAG,EAAEnC,UAAV;AAAsB,QAAA,GAAG,EAAEA,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,CADJ,EAEI;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAHR;AAQI,MAAA,SAAS,EAAE,KAAKI,cARpB;AASI,MAAA,SAAS,EAAE,KAAKA,cATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAYA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK4B,aAAL,CAAP;AACH;;AAnD0B;;AAsD/B,MAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO,EAAP;AAGH,CAJD;;AAMA,eAAevC,OAAO,CAACsC,eAAD,EAAkB;AAAErC,EAAAA;AAAF,CAAlB,CAAP,CAA2CI,MAA3C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { GoogleLogin } from 'react-google-login';\nimport config from './config'\nimport { connect } from \"react-redux\";\nimport { SocialAction } from \"../../../actions/UserActions\";\nimport { GoogleIcon } from \"../../../assets/images\";\nimport { getOr } from 'lodash/fp';\nimport RouterConstants from '../../../constants/routerConstants';\n\nclass GLogin extends Component {\n\n    //Marks :- google response\n\n    responseGoogle = (response) => {\n        this.setState({ isLoading: true })\n        let obj = {\n            email: getOr(null, 'w3.U3', response),\n            lastName: getOr(null, 'w3.wea', response),\n            firstName: getOr(null, 'w3.ofa', response),\n            password: \"\",\n            type: \"google\",\n            socialId: getOr(null, 'w3.Eea', response),\n            deviceId: (Math.floor(900000 * Math.random()) + 100000).toString(),\n            deviceToken: (Math.floor(900000 * Math.random()) + 100000).toString(),\n            platForm: \"web\",\n            gender: \"female\",\n            avtar: getOr(null, 'profileObj.imageUrl', response),\n        }\n        // Marks :- social-login  action \n\n        this.props.SocialAction(obj)\n            .then(response => {\n                if (response === \"Success\") {\n                    this.props.history.push(RouterConstants.home);\n                } else {\n                    this.setState({ isLoading: false })\n                }\n            }).catch(e => {\n                // console.log(e)\n            })\n\n    }\n\n    //Marks:- rendering ui element\n\n    render() {\n        let googleContent;\n        googleContent = (\n            <GoogleLogin\n                clientId={config.google}\n                render={renderProps => (\n                    <button className=\"btn-google btn d-flex align-items-center justify-content-center\" onClick={renderProps.onClick}>\n                        <span className=\"pr-sm-1\"><img src={GoogleIcon} alt={GoogleIcon} /></span>\n                        <span className=\"d-none d-sm-block\">GOOGLE</span>\n                    </button>\n                )}\n                onSuccess={this.responseGoogle}\n                onFailure={this.responseGoogle}\n            />)\n        return <li>{googleContent}</li>;\n    }\n\n}\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps, { SocialAction })(GLogin);\n"]},"metadata":{},"sourceType":"module"}