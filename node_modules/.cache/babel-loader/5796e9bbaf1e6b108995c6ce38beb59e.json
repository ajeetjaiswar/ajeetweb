{"ast":null,"code":"var _jsxFileName = \"/Users/ajeetjai/Desktop/website/src/view/components/main/Home/Home.js\";\nimport React, { Component } from 'react';\nimport { WrapperCard, PageHeading } from '../../common';\nimport { feed } from '../../../data/feed';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport { createPost } from \"../../../../services/postServices\";\nimport { Loader } from \"../../../../assets/SvgIcon\";\nimport ReactPlayer from \"react-player\";\nimport { random, slice } from \"lodash\";\nimport { hashify, urlify } from \"../../../../helpers/helperFunction\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrop = files => {\n      let assets = [];\n      let _this$state = this.state,\n          imageData = _this$state.imageData,\n          videoData = _this$state.videoData;\n      let imageResource = imageData;\n      let videoResource = videoData; // Push all the axios request promise into a single array\n\n      this.setState({\n        assets: files,\n        loader: true\n      });\n      const uploaders = files.map(file => {\n        let resourcseType = file.type == \"video/mp4\" ? 'video' : 'image'; // Initial FormData\n\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"tags\", \"codeinfuse, medium, gist\");\n        formData.append(\"upload_preset\", \"fxhamlup\"); // Replace the preset name with your own\n        //formData.append(\"api_key\", \"1234567\"); // Replace API key with your own Cloudinary key\n\n        formData.append(\"timestamp\", Date.now() / 1000 | 0); // Make an AJAX upload request using Axios (replace Cloudinary URL below with your own)\n\n        return axios.post('https://api.cloudinary.com/v1_1/koolkanya/' + resourcseType + '/upload', formData, {\n          headers: {\n            \"X-Requested-With\": \"XMLHttpRequest\"\n          }\n        }).then(response => {\n          const data = response.data;\n\n          if (file.type == \"video/mp4\") {\n            videoResource.push({\n              url: data.secure_url,\n              meta: data,\n              type: \"custom\"\n            });\n          } else {\n            imageResource.push({\n              url: data.secure_url,\n              meta: data\n            });\n            imageResource.push({\n              url: data.secure_url,\n              meta: data\n            });\n          }\n\n          const fileURL = data.secure_url; // You should store this URL for future references in your app\n        });\n      }); // Once all the files are uploaded\n\n      axios.all(uploaders).then(response => {\n        this.setState({\n          imageData: imageResource,\n          videoData: videoResource,\n          assets: assets,\n          loader: false\n        }); // ... perform after upload is successful operation\n        // let data = {\n        //     \"resource\": {\n        //         \"link\": resource,\n        //     },\n        //     \"content\": \"Let's go to delhi\",\n        //     \"tags\": [\"mumbai\", \"delhi\"]\n        // }\n      });\n    };\n\n    this.handlePostClick = () => {\n      let _this$state2 = this.state,\n          imageData = _this$state2.imageData,\n          videoData = _this$state2.videoData;\n      let token = localStorage.getItem('accessToken');\n\n      if (videoData.length > 0 || imageData.length > 0) {\n        let newData = {\n          \"resource\": {\n            \"link\": [],\n            \"videoUrl\": [videoData],\n            \"image\": [imageData]\n          },\n          \"content\": \"testing content\",\n          \"tags\": [\"mumbai\", \"delhi\"],\n          \"anonymous\": false\n        };\n        createPost(newData, token).then(response => {\n          if (response.data.statusCode == 1) {\n            this.setState({\n              responseMessage: \"Post Successfully Created\"\n            });\n            setTimeout(() => {\n              // Yay! Can invoke sync or async actions with `dispatch`\n              this.setState({\n                imageData: [],\n                videoData: [],\n                responseMessage: \"\"\n              });\n            }, 20000);\n          } else {\n            this.setState({\n              responseMessage: response.data.error.errorMessage\n            });\n          }\n        });\n      } else {\n        this.setState({\n          responseMessage: \"No file Selected\"\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      let value = e.target.value;\n      let linkedConttnt = urlify(value);\n      let real_Content = hashify(linkedConttnt); // var urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n      //\n      // var hashTag= /#[a-z]+/gi;\n      //     //'\\\\B(\\\\#[a-zA-Z]+\\\\b)(?!;)';\n      //\n      // let links = value.match(urlRegex);\n      // let hashtags = value.match(hashTag);\n      //Regex.Matches(input, regex);\n\n      this.setState({\n        [e.target.name]: value,\n        real_Content: real_Content\n      });\n    };\n\n    this.state = {\n      feed: feed,\n      imagePath: '',\n      docPreview: \"\",\n      assets: [],\n      loader: false,\n      responseMessage: \"\",\n      caption: \"\",\n      real_Content: \"\",\n      imageData: [],\n      videoData: []\n    };\n  }\n\n  renderCard() {\n    let feedLen = this.state.feed.length;\n    let first = random(1, feedLen);\n    let second = random(1, feedLen);\n\n    if (first === second) {\n      let firstData = slice(this.state.feed, 0, first);\n      let secondData = slice(this.state.feed, first, feedLen + 1);\n      let firstView = firstData.map((feed, key) => {\n        // console.log('feedData----------->', feed)\n        return React.createElement(WrapperCard, {\n          data: feed,\n          dataKey: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      });\n      let mobileTalkToKoolkanya = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"heello\");\n      let mobilePopularQuestion = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"heello2\");\n      let secondView = secondData.map((feed, key) => {\n        // console.log('feedData----------->', feed)\n        return React.createElement(WrapperCard, {\n          data: feed,\n          dataKey: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      });\n      return React.createElement(React.Fragment, null, firstView, mobileTalkToKoolkanya, mobilePopularQuestion, secondView);\n    } else {\n      let firstData = slice(this.state.feed, 0, first);\n      let secondData = slice(this.state.feed, first, second);\n      let thirdData = slice(this.state.feed, second, feedLen + 1);\n      let firstView = firstData.map((feed, key) => {\n        // console.log('feedData----------->', feed)\n        return React.createElement(WrapperCard, {\n          data: feed,\n          dataKey: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      });\n      let mobileTalkToKoolkanya = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Talk to Koolkanya\");\n      let mobilePopularQuestion = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Popular Question\");\n      let secondView = secondData.map((feed, key) => {\n        // console.log('feedData----------->', feed)\n        return React.createElement(WrapperCard, {\n          data: feed,\n          dataKey: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      });\n      let thirdView = thirdData.map((feed, key) => {\n        // console.log('feedData----------->', feed)\n        return React.createElement(WrapperCard, {\n          data: feed,\n          dataKey: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        });\n      });\n      return React.createElement(React.Fragment, null, firstView, mobileTalkToKoolkanya, secondView, mobilePopularQuestion, thirdView);\n    }\n  } // handleChange = (e) => {\n  //     const files = e.target.files\n  //     const CLOUDINARY_UPLOAD_PRESET = 'fxhamlup'\n  //     let resource_type = \"\"\n  //     const formData = new FormData();\n  //     for (let count = 0; count < files.length; count++) {\n  //         formData.append('file', files[count]);\n  //         console.log(\"path images\", files)\n  //         //this.setState({imagePath: e.target.files[0]})\n  //         console.log(files[count].type, \"amake amr moto thkte dao\")\n  //         resource_type = files[count].type\n  //     }\n  //     resource_type = resource_type == \"video/mp4\" ? 'video' : 'image'\n  //     const CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/koolkanya/' + resource_type + '/upload';\n  //     formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);\n  //     //Marks :- data upload to cloudinary\n  //     fetch(CLOUDINARY_URL, {\n  //         method: 'POST',\n  //         body: formData,\n  //       })\n  //         .then(response => response.json())\n  //         .then((data) => {\n  //             console.log(\"data contains\",data)\n  //           if (data.secure_url !== '') {\n  //             console.log(\"data secure url\",data.secure_url)\n  //             const uploadedFileUrl = data.secure_url;\n  //             localStorage.setItem('passportUrl', uploadedFileUrl);\n  //             this.setState({imagePath:uploadedFileUrl})\n  //           }\n  //         })\n  //         .catch(err => console.error(err));\n  // }\n\n\n  render() {\n    let _this$state3 = this.state,\n        imagePath = _this$state3.imagePath,\n        docPreview = _this$state3.docPreview,\n        assets = _this$state3.assets,\n        loader = _this$state3.loader,\n        responseMessage = _this$state3.responseMessage,\n        caption = _this$state3.caption,\n        real_Content = _this$state3.real_Content,\n        imageData = _this$state3.imageData,\n        videoData = _this$state3.videoData;\n    return React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(PageHeading, {\n      tagName: \"h1\",\n      className: \"heading-wrapper\",\n      headingClass: \"heading\",\n      headingText: \"Discover Koolkanya\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), loader ? React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"create-post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"uploader\",\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      onDrop: this.handleDrop,\n      onDropRejected: e => {// console.log(e, \"dropRejected\")\n      },\n      multiple: true,\n      accept: \"image/png, image/jpeg,image/jpeg,application/pdf,video/mp4\",\n      onDragEnter: () => {\n        this.setState({\n          responseMessage: \"\"\n        });\n      },\n      onDragLeave: () => {\n        this.setState({\n          responseMessage: \"\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, ({\n      getRootProps\n    }) => React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Drop files here, or click to select files\"), React.createElement(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Say Something\",\n      id: \"caption\",\n      name: \"caption\",\n      value: caption,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }))), videoData.map(function (item, index) {\n      return React.createElement(ReactPlayer, {\n        url: item.url //light={props.thumbnail}\n        ,\n        className: \"video-wrapper\",\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      });\n    }), imageData.map(function (item, index) {\n      return React.createElement(\"img\", {\n        src: item.url,\n        style: {\n          width: '100pt',\n          height: '100pt',\n          margin: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      });\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"custom-alert\",\n      style: {\n        color: \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, responseMessage), React.createElement(\"span\", {\n      className: 'btn-primary-fill',\n      onClick: this.handlePostClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Post\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    })), this.renderCard());\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/ajeetjai/Desktop/website/src/view/components/main/Home/Home.js"],"names":["React","Component","WrapperCard","PageHeading","feed","Dropzone","axios","createPost","Loader","ReactPlayer","random","slice","hashify","urlify","Home","constructor","props","handleDrop","files","assets","state","imageData","videoData","imageResource","videoResource","setState","loader","uploaders","map","file","resourcseType","type","formData","FormData","append","Date","now","post","headers","then","response","data","push","url","secure_url","meta","fileURL","all","handlePostClick","token","localStorage","getItem","length","newData","statusCode","responseMessage","setTimeout","error","errorMessage","handleChange","e","value","target","linkedConttnt","real_Content","name","imagePath","docPreview","caption","renderCard","feedLen","first","second","firstData","secondData","firstView","key","mobileTalkToKoolkanya","mobilePopularQuestion","secondView","thirdData","thirdView","render","getRootProps","item","index","width","height","margin","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { WrapperCard, PageHeading, } from '../../common';\nimport { feed } from '../../../data/feed';\nimport Dropzone from 'react-dropzone'\nimport axios from 'axios'\nimport { createPost } from \"../../../../services/postServices\";\nimport { Loader } from \"../../../../assets/SvgIcon\";\nimport ReactPlayer from \"react-player\";\nimport { random, slice } from \"lodash\"\nimport {hashify, urlify} from \"../../../../helpers/helperFunction\";\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            feed: feed,\n            imagePath: '',\n            docPreview: \"\",\n            assets: [],\n            loader: false,\n            responseMessage: \"\",\n            caption: \"\",\n            real_Content: \"\",\n            imageData: [],\n            videoData: [],\n        }\n    }\n\n    renderCard() {\n        let feedLen = this.state.feed.length;\n        let first = random(1, feedLen);\n        let second = random(1, feedLen);\n        if (first === second) {\n            let firstData = slice(this.state.feed, 0, first);\n            let secondData = slice(this.state.feed, first, feedLen + 1);\n            let firstView = firstData.map((feed, key) => {\n                // console.log('feedData----------->', feed)\n                return (\n                    <WrapperCard data={feed} dataKey={key} />\n                )\n            })\n            let mobileTalkToKoolkanya = <p>heello</p>\n            let mobilePopularQuestion = <p>heello2</p>\n            let secondView = secondData.map((feed, key) => {\n                // console.log('feedData----------->', feed)\n                return (\n                    <WrapperCard data={feed} dataKey={key} />\n                )\n            })\n            return (\n                <>\n                    {firstView}\n                    {mobileTalkToKoolkanya}\n                    {mobilePopularQuestion}\n                    {secondView}\n                </>\n            )\n        } else {\n            let firstData = slice(this.state.feed, 0, first);\n            let secondData = slice(this.state.feed, first, second);\n            let thirdData = slice(this.state.feed, second, feedLen + 1);\n            let firstView = firstData.map((feed, key) => {\n                // console.log('feedData----------->', feed)\n                return (\n                    <WrapperCard data={feed} dataKey={key} />\n                )\n            })\n            let mobileTalkToKoolkanya = <p>Talk to Koolkanya</p>\n            let mobilePopularQuestion = <p>Popular Question</p>\n            let secondView = secondData.map((feed, key) => {\n                // console.log('feedData----------->', feed)\n                return (\n                    <WrapperCard data={feed} dataKey={key} />\n                )\n            })\n            let thirdView = thirdData.map((feed, key) => {\n                // console.log('feedData----------->', feed)\n                return (\n                    <WrapperCard data={feed} dataKey={key} />\n                )\n            })\n            return (\n                <>\n                    {firstView}\n                    {mobileTalkToKoolkanya}\n                    {secondView}\n                    {mobilePopularQuestion}\n                    {thirdView}\n                </>\n            )\n        }\n    }\n\n    // handleChange = (e) => {\n    //     const files = e.target.files\n    //     const CLOUDINARY_UPLOAD_PRESET = 'fxhamlup'\n    //     let resource_type = \"\"\n    //     const formData = new FormData();\n\n\n    //     for (let count = 0; count < files.length; count++) {\n    //         formData.append('file', files[count]);\n    //         console.log(\"path images\", files)\n    //         //this.setState({imagePath: e.target.files[0]})\n    //         console.log(files[count].type, \"amake amr moto thkte dao\")\n    //         resource_type = files[count].type\n    //     }\n    //     resource_type = resource_type == \"video/mp4\" ? 'video' : 'image'\n    //     const CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/koolkanya/' + resource_type + '/upload';\n    //     formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);\n\n    //     //Marks :- data upload to cloudinary\n\n    //     fetch(CLOUDINARY_URL, {\n    //         method: 'POST',\n    //         body: formData,\n    //       })\n    //         .then(response => response.json())\n    //         .then((data) => {\n    //             console.log(\"data contains\",data)\n    //           if (data.secure_url !== '') {\n    //             console.log(\"data secure url\",data.secure_url)\n    //             const uploadedFileUrl = data.secure_url;\n    //             localStorage.setItem('passportUrl', uploadedFileUrl);\n    //             this.setState({imagePath:uploadedFileUrl})\n    //           }\n    //         })\n    //         .catch(err => console.error(err));\n    // }\n\n    handleDrop = files => {\n        let assets = [];\n        let { imageData, videoData } = this.state;\n        let imageResource = imageData;\n        let videoResource = videoData;\n\n        // Push all the axios request promise into a single array\n        this.setState({ assets: files, loader: true })\n        const uploaders = files.map(file => {\n            let resourcseType = file.type == \"video/mp4\" ? 'video' : 'image';\n            // Initial FormData\n            const formData = new FormData();\n            formData.append(\"file\", file);\n            formData.append(\"tags\", `codeinfuse, medium, gist`);\n            formData.append(\"upload_preset\", \"fxhamlup\"); // Replace the preset name with your own\n            //formData.append(\"api_key\", \"1234567\"); // Replace API key with your own Cloudinary key\n            formData.append(\"timestamp\", (Date.now() / 1000) | 0);\n\n            // Make an AJAX upload request using Axios (replace Cloudinary URL below with your own)\n            return axios.post('https://api.cloudinary.com/v1_1/koolkanya/' + resourcseType + '/upload', formData, {\n                headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n            }).then(response => {\n                const data = response.data;\n                if (file.type == \"video/mp4\") {\n                    videoResource.push({ url: data.secure_url, meta: data, type: \"custom\" });\n                } else {\n                    imageResource.push({url: data.secure_url, meta: data});\n                    imageResource.push({ url: data.secure_url, meta: data });\n\n                }\n                const fileURL = data.secure_url // You should store this URL for future references in your app\n            })\n        });\n\n        // Once all the files are uploaded\n        axios.all(uploaders).then((response) => {\n            this.setState({\n                imageData: imageResource,\n                videoData: videoResource,\n                assets: assets,\n                loader: false\n            })\n            // ... perform after upload is successful operation\n            // let data = {\n            //     \"resource\": {\n            //         \"link\": resource,\n            //     },\n            //     \"content\": \"Let's go to delhi\",\n            //     \"tags\": [\"mumbai\", \"delhi\"]\n            // }\n\n        });\n    }\n\n    handlePostClick = () => {\n        let { imageData, videoData } = this.state;\n        let token = localStorage.getItem('accessToken');\n\n        if (videoData.length > 0 || imageData.length > 0) {\n            let newData = {\n                \"resource\": {\n                    \"link\": [],\n                    \"videoUrl\": [videoData],\n                    \"image\": [imageData]\n                },\n                \"content\": \"testing content\",\n                \"tags\": [\n                    \"mumbai\", \"delhi\"\n                ],\n                \"anonymous\": false\n            }\n            createPost(newData, token).then(response => {\n                if (response.data.statusCode == 1) {\n                    this.setState({\n                        responseMessage: \"Post Successfully Created\",\n                    })\n\n                    setTimeout(() => {\n\n                        // Yay! Can invoke sync or async actions with `dispatch`\n                        this.setState({\n                            imageData: [],\n                            videoData: [],\n                            responseMessage: \"\"\n                        })\n                    }, 20000);\n\n                } else {\n                    this.setState({ responseMessage: response.data.error.errorMessage })\n                }\n            })\n        } else {\n            this.setState({ responseMessage: \"No file Selected\" })\n\n        }\n    }\n\n    //\n    handleChange = (e) => {\n        let value = e.target.value;\n        let linkedConttnt = urlify(value);\n        let real_Content= hashify(linkedConttnt);\n\n        // var urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n        //\n        // var hashTag= /#[a-z]+/gi;\n        //     //'\\\\B(\\\\#[a-zA-Z]+\\\\b)(?!;)';\n        //\n        // let links = value.match(urlRegex);\n        // let hashtags = value.match(hashTag);\n\n        //Regex.Matches(input, regex);\n\n\n\n        this.setState({\n            [e.target.name]: value,\n            real_Content: real_Content,\n        })\n\n    }\n\n    render() {\n        let {\n            imagePath, docPreview, assets, loader,\n            responseMessage, caption, real_Content,\n            imageData, videoData\n        } = this.state;\n        return (\n            <div className=\"content-wrapper\">\n                <PageHeading\n                    tagName=\"h1\"\n                    className=\"heading-wrapper\"\n                    headingClass=\"heading\"\n                    headingText=\"Discover Koolkanya\"\n                />\n                {loader ? <Loader /> : null}\n                <div className=\"create-post\">\n                    <div className=\"card-wrapper\">\n                        <ul>\n\n                            <form className=\"uploader\" encType=\"multipart/form-data\">\n                                <Dropzone\n                                    onDrop={this.handleDrop}\n                                    onDropRejected={(e) => {\n                                        // console.log(e, \"dropRejected\")\n                                    }}\n                                    multiple={true}\n                                    accept=\"image/png, image/jpeg,image/jpeg,application/pdf,video/mp4\"\n                                    onDragEnter={() => {\n                                        this.setState({ responseMessage: \"\" })\n                                    }}\n                                    onDragLeave={() => {\n                                        this.setState({ responseMessage: \"\" })\n                                    }}\n                                >\n                                    {({ getRootProps }) => (\n                                        <div {...getRootProps()}>\n                                            <p>Drop files here, or click to select files</p>\n\n                                            {/*<input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"Say Something\"\n                                                id={\"caption\"}\n                                                name=\"caption\"\n                                                value={caption}\n                                                onChange={this.handleChange}\n                                            />*/}\n\n                                            <textarea\n                                                rows=\"4\" cols=\"50\"\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"Say Something\"\n                                                id={\"caption\"}\n                                                name=\"caption\"\n                                                value={caption}\n                                                onChange={this.handleChange}\n                                            />\n\n                                           {/* <CKEditor\n                                                data=\"<p>Hello from CKEditor 4!</p>\"\n                                                className=\"form-control\"\n                                                placeholder=\"Say Something\"\n                                                id={\"caption\"}\n                                                name=\"caption\"\n                                                value={caption}\n                                                onChange={this.handleChange}\n                                            />*/}\n\n\n                                        </div>\n                                    )}\n                                </Dropzone>\n\n\n                                {videoData.map(function (item, index) {\n                                    return (\n                                        <ReactPlayer url={item.url}\n                                            //light={props.thumbnail}\n                                            className=\"video-wrapper\" controls={true} />\n                                    )\n                                })}\n                                {imageData.map(function (item, index) {\n                                    return (\n                                        <img src={item.url}\n                                            style={{ width: '100pt', height: '100pt', margin: '10px' }} />\n                                    )\n                                })}\n                            </form>\n                            <br />\n                            <span className=\"custom-alert\" style={{ color: \"green\" }}>{responseMessage}</span>\n                            {/* <li>\n                            <button className=\"btn-facebook btn d-flex align-items-center justify-content-center\">\n                             <span className=\"d-none d-sm-block\">POST</span>\n                            </button>\n                            </li> */}\n                            <span\n                                className={'btn-primary-fill'}\n                                onClick={this.handlePostClick}>\n                                Post\n                            </span>\n\n                        </ul>\n                    </div>\n{/*\n                    <span>{real_Content}</span>\n*/}\n\n                    <br/><br/><br/>\n\n                </div>\n                {this.renderCard()}\n            </div>\n        );\n    }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}