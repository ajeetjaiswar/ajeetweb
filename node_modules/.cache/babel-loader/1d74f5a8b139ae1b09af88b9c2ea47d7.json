{"ast":null,"code":"var _jsxFileName = \"/Users/ajeetjai/Desktop/website/src/view/layout/defaultLayout/headerWrapper/headerWrapper.jsx\";\nimport React, { Component } from 'react';\nimport AuthHeaderComponent from './authHeader/authHeader';\nimport MainHeaderComponent from './header/Header';\nimport StaticHeaderComponent from './staticHeader/staticHeader';\nconst authHeader = ['/login'];\nconst mainHeader = ['/home'];\nconst staticHeader = ['/', '/search', '/pagenotfound', '/about', '/team', '/companies', '/company/detail', '/faq', '/terms', '/privacy-policies', '/company/about', '/companies/industry', '/companies/location'];\n\nclass HeaderWrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleMobileMenu = () => {\n      this.setState({\n        headerToggle: !this.state.headerToggle\n      });\n    };\n\n    this.toggleSearchBar = () => {\n      this.setState({\n        searchToggle: !this.state.searchToggle\n      });\n    };\n\n    this.state = {\n      showMainHeader: false,\n      showAuthHeader: false,\n      showStaticHeader: false,\n      headerToggle: false,\n      searchToggle: false\n    };\n  }\n\n  componentDidMount() {\n    // check for the first also\n    // console.log('path here --------------> > ',this.props)\n    let pathname = this.props.location.pathname;\n    this.checkAuthHeader(pathname);\n    this.checkMainHeader(pathname);\n    this.checkStaticHeader(pathname);\n    this.unListen = this.props.history.listen((location, action) => {\n      // check notification on each route change\n      let pathname = location.pathname;\n      this.checkAuthHeader(pathname);\n      this.checkMainHeader(pathname);\n      this.checkStaticHeader(pathname);\n    });\n  }\n\n  checkMainHeader(pathname) {\n    // Change this logic in future.\n    let splitPath = pathname.split('/');\n    splitPath.pop();\n    let joinPath = splitPath.join('/');\n    splitPath.pop();\n    let secondPath = splitPath.join('/');\n\n    if (mainHeader.indexOf(pathname) > -1 || mainHeader.indexOf(joinPath) > -1 || mainHeader.indexOf(secondPath) > -1) {\n      this.setState({\n        showMainHeader: true\n      });\n    } else {\n      this.setState({\n        showMainHeader: false\n      });\n    }\n  }\n\n  checkAuthHeader(pathname) {\n    if (authHeader.indexOf(pathname) > -1) {\n      this.setState({\n        showAuthHeader: true\n      });\n    } else {\n      this.setState({\n        showAuthHeader: false\n      });\n    }\n  }\n\n  checkStaticHeader(pathname) {\n    // Change this logic in future.\n    let splitPath = pathname.split('/');\n    splitPath.pop();\n    let joinPath = splitPath.join('/');\n    splitPath.pop();\n    let secondPath = splitPath.join('/');\n\n    if (staticHeader.indexOf(pathname) > -1 || staticHeader.indexOf(joinPath) > -1 || staticHeader.indexOf(secondPath) > -1) {\n      this.setState({\n        showStaticHeader: true\n      });\n    } else if (staticHeader.indexOf(joinPath) > -1) {\n      this.setState({\n        showStaticHeader: true\n      });\n    } else {\n      this.setState({\n        showStaticHeader: false\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.unListen();\n  }\n\n  render() {\n    let _this$state = this.state,\n        showStaticHeader = _this$state.showStaticHeader,\n        showMainHeader = _this$state.showMainHeader,\n        showAuthHeader = _this$state.showAuthHeader,\n        headerToggle = _this$state.headerToggle,\n        searchToggle = _this$state.searchToggle,\n        resetMobileMenu = _this$state.resetMobileMenu;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, showAuthHeader ? React.createElement(AuthHeaderComponent, {\n      headerToggle: headerToggle,\n      toggleMobileMenu: this.toggleMobileMenu,\n      toggleSearchBar: this.toggleSearchBar,\n      searchToggle: searchToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }) : null, showMainHeader ? React.createElement(MainHeaderComponent, {\n      headerToggle: headerToggle,\n      toggleMobileMenu: this.toggleMobileMenu,\n      toggleSearchBar: this.toggleSearchBar,\n      searchToggle: searchToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }) : null, showStaticHeader || true ? React.createElement(StaticHeaderComponent, Object.assign({\n      headerToggle: headerToggle,\n      toggleMobileMenu: this.toggleMobileMenu\n    }, this.props, {\n      toggleSearchBar: this.toggleSearchBar,\n      searchToggle: searchToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })) : null);\n  }\n\n}\n\nexport default HeaderWrapper;","map":{"version":3,"sources":["/Users/ajeetjai/Desktop/website/src/view/layout/defaultLayout/headerWrapper/headerWrapper.jsx"],"names":["React","Component","AuthHeaderComponent","MainHeaderComponent","StaticHeaderComponent","authHeader","mainHeader","staticHeader","HeaderWrapper","constructor","props","toggleMobileMenu","setState","headerToggle","state","toggleSearchBar","searchToggle","showMainHeader","showAuthHeader","showStaticHeader","componentDidMount","pathname","location","checkAuthHeader","checkMainHeader","checkStaticHeader","unListen","history","listen","action","splitPath","split","pop","joinPath","join","secondPath","indexOf","componentWillUnmount","render","resetMobileMenu"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AuthHeaderComponent from './authHeader/authHeader';\nimport MainHeaderComponent from './header/Header';\nimport StaticHeaderComponent from './staticHeader/staticHeader';\n\nconst authHeader = ['/login']\nconst mainHeader = ['/home']\nconst staticHeader = ['/','/search','/pagenotfound', '/about', '/team', '/companies', '/company/detail', '/faq','/terms','/privacy-policies','/company/about', '/companies/industry', '/companies/location']\n\n\nclass HeaderWrapper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showMainHeader: false,\n            showAuthHeader: false,\n            showStaticHeader: false,\n            headerToggle: false,\n            searchToggle: false\n        }\n    }\n\n    componentDidMount() {\n        // check for the first also\n        // console.log('path here --------------> > ',this.props)\n        let pathname = this.props.location.pathname;\n        this.checkAuthHeader(pathname);\n        this.checkMainHeader(pathname);\n        this.checkStaticHeader(pathname);\n\n        this.unListen = this.props.history.listen((location, action) => {\n            // check notification on each route change\n            let pathname = location.pathname;\n            this.checkAuthHeader(pathname);\n            this.checkMainHeader(pathname);\n            this.checkStaticHeader(pathname);\n        });\n    }\n\n    toggleMobileMenu = () => {\n        this.setState({ headerToggle: !this.state.headerToggle })\n    }\n\n    toggleSearchBar = () => {\n        this.setState({ searchToggle: !this.state.searchToggle })\n    }\n\n    checkMainHeader(pathname) {\n        // Change this logic in future.\n        let splitPath = pathname.split('/');\n        splitPath.pop();\n        let joinPath = splitPath.join('/');\n        splitPath.pop();\n        let secondPath = splitPath.join('/');\n        if (mainHeader.indexOf(pathname) > -1 || mainHeader.indexOf(joinPath) > -1 || mainHeader.indexOf(secondPath) > -1) {\n            this.setState({ showMainHeader: true })\n        } else {\n            this.setState({ showMainHeader: false })\n        }\n    }\n\n    checkAuthHeader(pathname) {\n        if (authHeader.indexOf(pathname) > -1) {\n            this.setState({ showAuthHeader: true })\n        } else {\n            this.setState({ showAuthHeader: false })\n        }\n    }\n\n    checkStaticHeader(pathname) {\n        // Change this logic in future.\n        let splitPath = pathname.split('/');\n        splitPath.pop();\n        let joinPath = splitPath.join('/');\n        splitPath.pop();\n        let secondPath = splitPath.join('/');\n        if (staticHeader.indexOf(pathname) > -1 || staticHeader.indexOf(joinPath) > -1 || staticHeader.indexOf(secondPath) > -1) {\n            this.setState({ showStaticHeader: true })\n        } else if (staticHeader.indexOf(joinPath) > -1) {\n            this.setState({ showStaticHeader: true })\n        } else {\n            this.setState({ showStaticHeader: false })\n        }\n    }\n\n\n    componentWillUnmount() {\n        this.unListen();\n    }\n\n\n\n    render() {\n        let { showStaticHeader, showMainHeader, showAuthHeader, headerToggle, searchToggle, resetMobileMenu } = this.state;\n        return (\n            <div>\n                {showAuthHeader\n                    ?\n                    <AuthHeaderComponent\n                        headerToggle={headerToggle}\n                        toggleMobileMenu={this.toggleMobileMenu}\n                        toggleSearchBar={this.toggleSearchBar}\n                        searchToggle={searchToggle}\n                    />\n                    : null\n                }\n                {showMainHeader\n                    ?\n                    <MainHeaderComponent\n                        headerToggle={headerToggle}\n                        toggleMobileMenu={this.toggleMobileMenu}\n                        toggleSearchBar={this.toggleSearchBar}\n                        searchToggle={searchToggle}\n                    />\n                    : null\n                }\n                {showStaticHeader || true\n                    ?\n                    <StaticHeaderComponent\n                        headerToggle={headerToggle}\n                        toggleMobileMenu={this.toggleMobileMenu}\n                        {...this.props}\n                        toggleSearchBar={this.toggleSearchBar}\n                        searchToggle={searchToggle}\n                    />\n                    : null\n                }\n            </div>\n        );\n    }\n}\n\nexport default HeaderWrapper;\n"]},"metadata":{},"sourceType":"module"}